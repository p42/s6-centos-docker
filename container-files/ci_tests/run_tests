#!/bin/with-contenv sh

# This file is used for tests specific to the master branch.
# The CI Test structure is to call a single test file that iterates a directory of individual tests.
# In keeping with standard testing prodcedures,
# each test should be singular (at least as much as is possible).


# If no input set it to "all"
if [ $# -eq 0 ]; then
  TESTS="all"
  echo "No tests supplied running all tests"
else # use input as test directory
  TESTS=$1
  if [ -d /ci_tests/${TESTS} ]; then
    echo "running tests only from /ci_tests/${TESTS}/"
  else
    echo "/ci_tests/${TESTS} is not a valid test directory, Failing"
    exit 1
  fi # end input directory
fi # end input

# Execute tests function
execute_tests() {
  FUNCTION_INPUT=$1
  if [ -d "${FUNCTION_INPUT}" ]; then                  # Test that it is a directory
    echo "running tests in ${FUNCTION_INPUT}/"
    for FILE in ${FUNCTION_INPUT}/*; do      # Walk through items in the directory
      if [ -x ${FILE} ] && [ -f ${FILE} ]; then       # Make sure it is executable and a file
        echo "executing test: ${FILE}"
        ${FILE}                                   # Execute the test
        # $? gives us the exit code of the previous process (last file to run)
        # which allows us to print fail if a test fails.
        # Please make sure and print reasons for failure.
        RC=$?                                     # Read in the exit code
        if [[ ${RC} != 0 ]]; then                 # Did the test fail?
          # If a file returned non-zero, print out that file so we have some testing recourse.
          echo "${FILE} exited with non-zero exit code"
          exit ${RC};                             # Exit and return the non-zero exit code
        fi # end test failed
      else # not executable or a file
        echo "skipping ${FILE} because it is not executable or not a file"
      fi # end executable test
    done # end of items in directory
  fi # end Test directory
}


if [[ ${TESTS} == "all" ]]; then                  # Run all tests
  for DIRECTORY in /ci_tests/*; do                # Walk through all items in /ci_tests/
    execute_tests ${DIRECTORY}
  done # end all items
else                                              # Test directory passed in
  execute_tests /ci_tests/${TESTS}
fi # end run_tests
